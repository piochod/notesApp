{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\notesApp\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\nconst NotePage = history => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    id\n  } = useParams();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n  let getNote = async () => {\n    if (id === 'new') return;\n    let response = await fetch(`/api/notes/${id}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleUpdate = async () => {\n    _s();\n    const history = useHistory();\n    if (id !== 'new' && !note.body) {\n      await sleep(5000);\n      deleteNote();\n      history.push('/');\n    } else if (id !== 'new') {\n      await sleep(5000);\n      updateNote();\n      history.push('/');\n    } else if (id === 'new' && note != null) {\n      await sleep(5000);\n      createNote();\n      history.push('/');\n    }\n  };\n  _s(handleUpdate, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n  let handleChange = value => {\n    setNote(note => ({\n      ...note,\n      value\n    }));\n    console.log('NOTE:', note);\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      metod: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteNote,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 85\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"note-button\",\n      onClick: handleUpdate,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotePage, \"vQ11wRmxa4NKoPGwpyFM9Ul+v5M=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ReactComponent","ArrowLeft","Link","useHistory","jsxDEV","_jsxDEV","sleep","ms","Promise","r","setTimeout","NotePage","history","_s2","_s","$RefreshSig$","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","createNote","handleUpdate","deleteNote","push","handleChange","value","console","log","metod","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/notesApp/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nconst sleep = ms => new Promise(r => setTimeout(r, ms));\r\n\r\nconst NotePage = (history) => {\r\n    let { id } = useParams();\r\n    let[note,setNote] = useState(null);\r\n\r\n    useEffect(()=>\r\n    {\r\n        getNote()\r\n    }, [id]);\r\n\r\n    let getNote = async ()=> {\r\n        if (id === 'new') return;\r\n        let response = await fetch(`/api/notes/${id}/`);\r\n        let data = await response.json();\r\n        setNote(data);\r\n    }\r\n\r\n    let updateNote = async() =>{\r\n        \r\n        fetch(`/api/notes/${id}/update/`,\r\n        {   method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(note)\r\n    });\r\n        \r\n    }\r\n\r\n    let createNote = async() =>{\r\n        fetch(`/api/notes/create/`,\r\n        {   method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(note)\r\n    });\r\n        \r\n    }\r\n\r\n    let handleUpdate = async ()=>\r\n    {\r\n        const history = useHistory();\r\n        \r\n        if(id !== 'new' && !note.body)\r\n        {\r\n            await sleep(5000)\r\n            deleteNote();\r\n            history.push('/');\r\n            \r\n        }\r\n        else if(id !== 'new')\r\n        {\r\n            await sleep(5000)\r\n            updateNote();\r\n            history.push('/');\r\n        }\r\n        else if (id ==='new' && note != null)\r\n        {\r\n            await sleep(5000)\r\n            createNote();\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    let handleChange= (value) =>{\r\n        setNote(note => ({...note,value}));\r\n        console.log('NOTE:', note)\r\n    }\r\n\r\n    let deleteNote = async() =>{\r\n        fetch(`/api/notes/${id}/delete/`,\r\n        {\r\n            metod: 'DELETE',\r\n            headers: {'Content-Type': 'application/json'},\r\n        });\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            \r\n            <Link to='/'>\r\n                <h3>\r\n                    <ArrowLeft />\r\n                    {id !== 'new' ? (<button onClick={deleteNote}>Delete</button>):(<div></div>)}\r\n                    \r\n                </h3>\r\n                \r\n            </Link>\r\n            \r\n            \r\n        </div>\r\n        <textarea onChange = {(e)=> {handleChange(e.target.value)}} defaultValue={note?.body}>\r\n        </textarea>\r\n        <button className='note-button' onClick={handleUpdate}> Submit </button>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}