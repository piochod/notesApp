{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\notesApp\\\\frontend\\\\src\\\\pages\\\\NotesListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ListItem from '../components/ListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesListPage = () => {\n  _s();\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []);\n  let getNotes = async () => {\n    let response = await fetch('/api/notes/');\n    let data = await response.json();\n    setNotes(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesListPage, \"NIftjk3oeo0CYYZWCQZt9Dv4Mb4=\");\n_c = NotesListPage;\nexport default NotesListPage;\nvar _c;\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useState","useEffect","ListItem","jsxDEV","_jsxDEV","NotesListPage","_s","notes","setNotes","getNotes","response","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","index","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/notesApp/frontend/src/pages/NotesListPage.js"],"sourcesContent":["import React , {useState, useEffect} from 'react';\r\nimport ListItem from '../components/ListItem';\r\n\r\nconst NotesListPage = () => {\r\n    let [notes,setNotes] = useState([]);\r\n\r\n    useEffect(()=>\r\n    {\r\n        getNotes();\r\n    },[])\r\n\r\n    let getNotes = async () => {\r\n        let response = await fetch('/api/notes/');\r\n        let data = await response.json();\r\n        setNotes(data);\r\n    }\r\n  return (\r\n    <div className='notes'>\r\n      <div className='notes-header'>\r\n        <h2 className='notes-title'>&#9782;</h2>\r\n      </div>\r\n      <div className='notes-list'>\r\n        {notes.map((note,index) => (\r\n            <ListItem key={index} note={note} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotesListPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEnCC,SAAS,CAAC,MACV;IACIQ,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,IAAIA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IACzC,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,QAAQ,CAACI,IAAI,CAAC;EAClB,CAAC;EACH,oBACER,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBX,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BX,OAAA;QAAIU,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACNf,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBR,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAClBlB,OAAA,CAACF,QAAQ;QAAamB,IAAI,EAAEA;MAAK,GAAlBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAb,EAAA,CAzBKD,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AA2BnB,eAAeA,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}