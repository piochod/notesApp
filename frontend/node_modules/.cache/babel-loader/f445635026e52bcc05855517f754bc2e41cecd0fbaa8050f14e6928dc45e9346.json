{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\notesApp\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = history => {\n  _s();\n  let {\n    id\n  } = useParams();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n  let getNote = async () => {\n    if (id === 'new') return;\n    let response = await fetch(`/api/notes/${id}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let createNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleUpdate = async () => {\n    if (id !== 'new' && note.body == '') {\n      deleteNote();\n      console.log(note.body);\n    } else if (id !== 'new') {\n      updateNote();\n    }\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      metod: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteNote,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 85\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"note-button\",\n        onClick: handleUpdate,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"vQ11wRmxa4NKoPGwpyFM9Ul+v5M=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ReactComponent","ArrowLeft","Link","jsxDEV","_jsxDEV","NotePage","history","_s","id","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","createNote","handleUpdate","deleteNote","console","log","metod","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/notesApp/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotePage = (history) => {\r\n    let { id } = useParams();\r\n    let[note,setNote] = useState(null);\r\n\r\n    useEffect(()=>\r\n    {\r\n        getNote();\r\n    }, [id]);\r\n\r\n    let getNote = async ()=> {\r\n        if (id === 'new') return;\r\n        let response = await fetch(`/api/notes/${id}/`);\r\n        let data = await response.json();\r\n        setNote(data);\r\n    }\r\n\r\n    let updateNote = async() =>{\r\n        \r\n        fetch(`/api/notes/${id}/update/`,\r\n        {   method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(note)\r\n    });\r\n        \r\n    }\r\n\r\n    let createNote = async() =>{\r\n        fetch(`/api/notes/${id}/update/`,\r\n        {   method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(note)\r\n    });\r\n        \r\n    }\r\n\r\n    let handleUpdate = async ()=>\r\n    {\r\n        if(id !== 'new' && note.body == '')\r\n        {\r\n            deleteNote();\r\n            console.log(note.body)\r\n        }\r\n        else if(id !== 'new')\r\n        {\r\n            updateNote();\r\n        }\r\n    }\r\n\r\n    let deleteNote = async() =>{\r\n        fetch(`/api/notes/${id}/delete/`,\r\n        {\r\n            metod: 'DELETE',\r\n            headers: {'Content-Type': 'application/json'},\r\n        });\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className='note'>\r\n        <div className='note-header'>\r\n            \r\n            <Link to='/'>\r\n                <h3>\r\n                    <ArrowLeft />\r\n                    {id !== 'new' ? (<button onClick={deleteNote}>Delete</button>):(<div></div>)}\r\n                    \r\n                </h3>\r\n                \r\n            </Link>\r\n            \r\n            \r\n        </div>\r\n        <textarea onChange = {(e) => {setNote({...note,'body': e.target.value})}}defaultValue={note?.body}>\r\n        </textarea>\r\n        <Link to='/'>\r\n            <button className='note-button' onClick={handleUpdate}> Submit </button>\r\n        </Link>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}