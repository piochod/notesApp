{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piotr\\\\Desktop\\\\notesApp\\\\frontend\\\\src\\\\pages\\\\NotesListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesListPage = () => {\n  _s();\n  let [notes, setNotes] = useState([]);\n  useEffect(() => {\n    getNotes();\n  }, []);\n  let getNotes = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/notes/');\n    let data = await response.json();\n    setNotes(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: note.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesListPage, \"NIftjk3oeo0CYYZWCQZt9Dv4Mb4=\");\n_c = NotesListPage;\nexport default NotesListPage;\nvar _c;\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NotesListPage","_s","notes","setNotes","getNotes","response","fetch","data","json","children","className","map","note","index","body","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/piotr/Desktop/notesApp/frontend/src/pages/NotesListPage.js"],"sourcesContent":["import React , {useState, useEffect}from 'react'\r\n\r\nconst NotesListPage = () => {\r\n    let [notes,setNotes] = useState([]);\r\n\r\n    useEffect(()=>\r\n    {\r\n        getNotes()\r\n    },[])\r\n\r\n    let getNotes = async () => {\r\n        let response = await fetch('http://127.0.0.1:8000/api/notes/')\r\n        let data = await response.json()\r\n        setNotes(data)\r\n    }\r\n  return (\r\n    <div>\r\n      <div className='notes-list'>\r\n        {notes.map((note,index) => (\r\n            <h3>{note.body}</h3>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotesListPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEnCC,SAAS,CAAC,MACV;IACIO,QAAQ,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EAEL,IAAIA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;IAC9D,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,QAAQ,CAACI,IAAI,CAAC;EAClB,CAAC;EACH,oBACER,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAD,QAAA,EACxBP,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAClBd,OAAA;QAAAU,QAAA,EAAKG,IAAI,CAACE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAtBKD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAwBnB,eAAeA,aAAa;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}